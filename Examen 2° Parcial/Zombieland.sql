SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE SCHEMA IF NOT EXISTS `dawbdorg_A00570654` DEFAULT CHARACTER SET utf8 ;
USE `dawbdorg_A00570654` ;

-- TABLAS

CREATE TABLE IF NOT EXISTS `dawbdorg_A00570654`.`Zombi` (
 `ZombID` INT NOT NULL AUTO_INCREMENT,
 `Nombre` VARCHAR(50) NOT NULL,
 PRIMARY KEY (`ZombID`));
 
 CREATE TABLE IF NOT EXISTS `dawbdorg_A00570654`.`Estado` (
 `EstID` INT NOT NULL AUTO_INCREMENT,
 `Estado` VARCHAR(20) NOT NULL,
 PRIMARY KEY (`EstID`));
 
 CREATE TABLE IF NOT EXISTS `dawbdorg_A00570654`.`Historial` (
 `ZombID` INT NOT NULL,
 `EstID` INT NOT NULL,
 `FechaHora` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 FOREIGN KEY (`ZombID`) REFERENCES `dawbdorg_A00570654`.`Zombi` (`ZombID`),
 FOREIGN KEY (`EstID`) REFERENCES `dawbdorg_A00570654`.`Estado` (`EstID`));
 
-- BULK INSERTS
 
LOAD DATA INFILE 'C:\Sombie.csv'
INTO TABLE dawbdorg_A00570654.Zombi
FIELDS TERMINATED BY ',';

LOAD DATA INFILE 'C:\Estado.csv'
INTO TABLE dawbdorg_A00570654.Estado
FIELDS TERMINATED BY ',';

LOAD DATA INFILE 'C:\Historial.csv'
INTO TABLE dawbdorg_A00570654.Historial
FIELDS TERMINATED BY ',';

-- STORED PROCEDURES

DELIMITER //
CREATE PROCEDURE imprimirZombie(
)
BEGIN
    SELECT Z.Nombre, E.Estado, H.FechaHora
    FROM Zombie as Z, Estado as E, Historial as H
    WHERE Z.ZombID = H.ZombID AND E.EstID = H.EstID
    ORDER BY H.FechaHora;
END //
DELIMITER 

DELIMITER //
CREATE PROCEDURE imprimirZombieOrdenado(
)
BEGIN
    SELECT Z.Nombre, E.Estado, H.FechaHora
    FROM Zombie as Z, Estado as E, Historial as H
    WHERE Z.ZombID = H.ZombID AND E.EstID = H.EstID
    ORDER BY H.FechaHora DESC, Z.Nombre ASC;
END //
DELIMITER 

DELIMITER //
CREATE PROCEDURE nuevoZombie(
IN uNombre VARCHAR(50),
IN uEstado VARCHAR(50)
)
BEGIN
    INSERT INTO Zombie(Nombre) VALUES (uNombre);
    INSERT INTO Historial(Estado, ZombID) VALUES (uEstado, LAST_INSERT_ID());
END //
DELIMITER ;

-- VISTAS

CREATE VIEW ZombisPorEstado AS 
	SELECT Estado, COUNT(H.EstID) AS Total
	FROM Estado AS E, Historial AS H
    WHERE E.EstID = H.EstID
	GROUP BY Estado;